// stylelint-disable selector-no-qualifying-type

//
// Base styles
//

.btn {
  display: inline-block;
  font-weight: $btn-font-weight;
  text-align: center;
  white-space: nowrap;
  vertical-align: middle;
  user-select: none;
  border: $btn-border-width solid transparent;
  @include button-size($btn-padding-y, $btn-padding-x, $font-size-base, $btn-line-height, $btn-border-radius);
  @include transition($btn-transition);
  height: 40px;
  color: $ink;
  text-transform: none;
  background-color: $light-brand-green;

  svg {
      fill: $ink;
  }

  // Share hover and focus styles
  @include hover-focus {
    text-decoration: none;
    background: inherit;
  }

  &:focus,
  &.focus {
    outline: 0;
    box-shadow: $btn-focus-box-shadow;
  }

  // Disabled comes first so active can properly restyle
  &.disabled,
  &:disabled {
    opacity: $btn-disabled-opacity;
    @include box-shadow(none);
  }

  // Opinionated: add "hand" cursor to non-disabled .btn elements
  &:not([disabled]):not(.disabled) {
    cursor: pointer;
  }

  &:not([disabled]):not(.disabled):active,
  &:not([disabled]):not(.disabled).active {
    background-image: none;
    @include box-shadow($btn-active-box-shadow);

    &:focus {
      @include box-shadow($btn-focus-box-shadow, $btn-active-box-shadow);
    }
  }
}

// Future-proof disabling of clicks on `<a>` elements
a.btn.disabled,
fieldset[disabled] a.btn {
  pointer-events: none;
}


//
// Alternate buttons
//

@each $color, $value in $theme-colors {
  .btn-#{$color} {
    @include button-variant($value, $value);
  }
}

@each $color, $value in $theme-colors {
  .btn-outline-#{$color} {
    @if $color == "light" {
      @include button-outline-variant($value, $gray-900);
    } @else {
      @include button-outline-variant($value, $white);
    }
  }
}


//
// Link buttons
//

// Make a button look and behave like a link
.btn-link {
  font-weight: $font-weight-normal;
  color: $link-color;
  background-color: transparent;

  @include hover {
    color: $link-hover-color;
    background-color: transparent;
    border-color: transparent;
  }

  &:focus,
  &.focus {
    border-color: transparent;
    box-shadow: none;
  }

  &:disabled,
  &.disabled {
    color: $btn-link-disabled-color;
  }

  // No need for an active state here
}


//
// Button Sizes
//

.btn-lg {
  @include button-size($btn-padding-y-lg, $btn-padding-x-lg, $font-size-lg, $btn-line-height-lg, $btn-border-radius-lg);
}

.btn-sm {
  @include button-size($btn-padding-y-sm, $btn-padding-x-sm, $font-size-sm, $btn-line-height-sm, $btn-border-radius-sm);
}


//
// Block button
//

.btn-block {
  display: block;
  width: 100%;

  // Vertically space out multiple block buttons
  + .btn-block {
    margin-top: $btn-block-spacing-y;
  }
}

// Specificity overrides
input[type="submit"],
input[type="reset"],
input[type="button"] {
  &.btn-block {
    width: 100%;
  }
}

.btn {
    height: 40px;
    padding: 10px 20px;
    font-weight: $font-weight-bold;
    font-size: $font-size-xs;
    line-height: $line-height-xs;
    color: $ink;
    text-transform: none;
    background-color: $light-brand-green;
    border: 0 solid transparent;

    svg {
        fill: $ink;
    }

    &-sm {
        padding: 7px 15px 6px;
        height: 30px;
        font-size: 12px;
        font-size: $font-size-xxs;
        line-height: $line-height-xxs;
    }

    &-lg {
        padding: 14px 24px;
        height: 50px;
        font-size: $font-size-base;
        line-height: $line-height-base;
    }

    &-primary {
        color: $ink;
        background-color: $light-brand-green;
        border: none;
        border-radius: 4px;

        &:not([disabled]):hover,
        &:active,
        &:after,
        &:before,
        &:visited,
        &:not([disabled]):focus {
            color: $ink !important;
            background-color: $lighter-brand-green !important;
        }

        &:disabled {
            color: $white;
            background-color: $silver;
            cursor: not-allowed;
        }
        

    }

    &-standard {
        padding: 9px 19px;
        border: solid 1px rgba($slate, .5);
        border-radius: 4px;
        background-color: $white;

        &:not([disabled]):hover,
        &:active,
        &:after,
        &:before,
        &:visited,
        &:not([disabled]):focus {
            color: $white !important;
            text-decoration: none;
            border-color: $slate !important;
            background-color: $slate !important;
        }

        &:disabled {
            color: rgba($slate, .3);
            background-color: rgba($slate, .1);
            cursor: not-allowed;
        }

        &-dark {
            border: solid 1px rgba($off-white, .5);
            background-color: $ink;
            color: $white;

            &:not([disabled]):hover,
            &:active,
            &:after,
            &:before,
            &:visited,
            &:not([disabled]):focus {
                border-color: $white !important;
                color: $ink !important;
                background-color: $white !important;
            }

            &:disabled {
                color: rgba($off-white, .3);
                background-color: rgba($off-white, .2);
                cursor: not-allowed;
            }
        }
    }

    &-utility {
        color: $slate;
        background-color: rgba($slate, .08);

        &:not([disabled]):hover,
        &:active,
        &:after,
        &:before,
        &:visited,
        &:not([disabled]):focus {
            text-decoration: none !important;;
            color: $slate !important;
            border-color: $slate !important;
            background-color: rgba($slate, .16) !important;
        }

        &:disabled {
            color: rgba($slate, .3);
            background-color: rgba($slate, .1);
            cursor: not-allowed;
        }

        &-dark {
            background-color: rgba($off-white, .2);
            color: $off-white;

            &:not([disabled]):hover,
            &:active,
            &:after,
            &:before,
            &:visited,
            &:not([disabled]):focus {
                background-color: rgba($off-white, .3) !important;
                color: $off-white !important;
            }

            &:disabled {
                color: rgba($off-white, .3);
                background-color: rgba($off-white, .2);
                cursor: not-allowed;
            }
        }
    }

    &-ghost {
        padding: 15 20px;
        color: $slate;
        background: none;

        &:not([disabled]):hover,
        &:active,
        &:after,
        &:before,
        &:visited,
        &:not([disabled]):focus {
            text-decoration: none !important;
            background-color: rgba($slate, .08) !important;

            svg {
                fill: $slate;
            }
        }

        &:disabled {
            color: rgba($slate, .3);
            background-color: inherit;
            cursor: not-allowed;

            svg {
                fill: rgba($slate, .3);
            }
        }

        svg {
            fill: $slate;
        }
        
        &-dark {
            background: none;
            color: $off-white;

            &:not([disabled]):hover,
            &:active,
            &:after,
            &:before,
            &:visited,
            &:not([disabled]):focus {
                background-color: rgba($off-white, .16) !important;
                color: $off-white !important;

                svg {
                    fill: $off-white;
                }
            }

            svg {
                fill: $off-white;
            }

            &:disabled {
                color: rgba($off-white, .3);
                background: none;
                cursor: not-allowed;

                svg {
                    fill: rgba($off-white, .3);
                }
            }
        }
    }

    &-icon {
        height: 36px;
        padding: 5px;
    }
}